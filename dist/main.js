(()=>{"use strict";var e={89:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var l=0;l<e.length;l++){var d=[].concat(e[l]);r&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),n.push(d))}},n}},963:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},208:(e,n,t)=>{t.d(n,{A:()=>s});var r=t(963),o=t.n(r),a=t(89),i=t.n(a)()(o());i.push([e.id,"body {\n  background-color: beige;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,uBAAuB;AACzB",sourcesContent:["body {\n  background-color: beige;\n}\n"],sourceRoot:""}]);const s=i},930:(e,n,t)=>{t.d(n,{A:()=>s});var r=t(963),o=t.n(r),a=t(89),i=t.n(a)()(o());i.push([e.id,".game-result {\n  display: grid;\n  grid-template-columns: 2fr 1fr;\n  background-color: bisque;\n  padding: 0.5em 0;\n  justify-items: center;\n}\n\n.game-result > p:first-child {\n  font-size: 1.5rem;\n  font-weight: 900;\n  text-align: center;\n}\n\n.game-result > button:last-child {\n  font-size: 1.1rem;\n  border-radius: 10px;\n  border: none;\n  background-color: rebeccapurple;\n  color: aliceblue;\n  padding: 0.3em 1em;\n  box-shadow: 0 0 10px 1px rgb(0 0 0/0.3);\n  cursor: pointer;\n}\n","",{version:3,sources:["webpack://./src/views/game-result/style.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,8BAA8B;EAC9B,wBAAwB;EACxB,gBAAgB;EAChB,qBAAqB;AACvB;;AAEA;EACE,iBAAiB;EACjB,gBAAgB;EAChB,kBAAkB;AACpB;;AAEA;EACE,iBAAiB;EACjB,mBAAmB;EACnB,YAAY;EACZ,+BAA+B;EAC/B,gBAAgB;EAChB,kBAAkB;EAClB,uCAAuC;EACvC,eAAe;AACjB",sourcesContent:[".game-result {\n  display: grid;\n  grid-template-columns: 2fr 1fr;\n  background-color: bisque;\n  padding: 0.5em 0;\n  justify-items: center;\n}\n\n.game-result > p:first-child {\n  font-size: 1.5rem;\n  font-weight: 900;\n  text-align: center;\n}\n\n.game-result > button:last-child {\n  font-size: 1.1rem;\n  border-radius: 10px;\n  border: none;\n  background-color: rebeccapurple;\n  color: aliceblue;\n  padding: 0.3em 1em;\n  box-shadow: 0 0 10px 1px rgb(0 0 0/0.3);\n  cursor: pointer;\n}\n"],sourceRoot:""}]);const s=i},304:(e,n,t)=>{t.d(n,{A:()=>s});var r=t(963),o=t.n(r),a=t(89),i=t.n(a)()(o());i.push([e.id,".game-stats {\n  font-size: 1.2rem;\n  padding-bottom: 1em;\n}\n.game-stats > span:first-child {\n  font-weight: bold;\n}\n","",{version:3,sources:["webpack://./src/views/game-stats/style.css"],names:[],mappings:"AAAA;EACE,iBAAiB;EACjB,mBAAmB;AACrB;AACA;EACE,iBAAiB;AACnB",sourcesContent:[".game-stats {\n  font-size: 1.2rem;\n  padding-bottom: 1em;\n}\n.game-stats > span:first-child {\n  font-weight: bold;\n}\n"],sourceRoot:""}]);const s=i},8:(e,n,t)=>{t.d(n,{A:()=>s});var r=t(963),o=t.n(r),a=t(89),i=t.n(a)()(o());i.push([e.id,".gameboard {\n  display: inline-grid;\n  grid-template-columns: repeat(10, 42px);\n  grid-template-rows: repeat(10, 42px);\n  margin: 2em;\n  padding: 1em;\n  background-color: midnightblue;\n}\n\n.cell {\n  width: 40px;\n  height: 40px;\n  background-color: lightblue;\n  --ship-border: 2px solid slateblue;\n}\n\n.cell {\n  cursor: pointer;\n}\n\n.cell.disabled {\n  cursor: unset;\n  pointer-events: none;\n}\n\n.ship {\n  width: 36px;\n  height: 36px;\n  background-color: silver;\n}\n.ship.attacked,\n.for-machine.attacked {\n  background-color: red;\n}\n\n.empty-marked,\n.for-machine.empty-marked {\n  background-color: greenyellow;\n}\n\n.vertical.head {\n  border: var(--ship-border);\n  height: 40px;\n  border-bottom: none;\n}\n\n.vertical.middle {\n  height: 42px;\n  border-left: var(--ship-border);\n  border-right: var(--ship-border);\n}\n\n.vertical.tail {\n  border: var(--ship-border);\n  height: 38px;\n  border-top: none;\n}\n\n.horizontal.head {\n  border: var(--ship-border);\n  width: 40px;\n  border-right: none;\n}\n\n.horizontal.middle {\n  width: 42px;\n  border-top: var(--ship-border);\n  border-bottom: var(--ship-border);\n}\n\n.horizontal.tail {\n  border: var(--ship-border);\n  width: 38px;\n  border-left: none;\n}\n\n.ship.sunk {\n  background-color: black;\n  border-color: #944e4e;\n}\n","",{version:3,sources:["webpack://./src/views/gameboard/style.css"],names:[],mappings:"AAAA;EACE,oBAAoB;EACpB,uCAAuC;EACvC,oCAAoC;EACpC,WAAW;EACX,YAAY;EACZ,8BAA8B;AAChC;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,2BAA2B;EAC3B,kCAAkC;AACpC;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,oBAAoB;AACtB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,wBAAwB;AAC1B;AACA;;EAEE,qBAAqB;AACvB;;AAEA;;EAEE,6BAA6B;AAC/B;;AAEA;EACE,0BAA0B;EAC1B,YAAY;EACZ,mBAAmB;AACrB;;AAEA;EACE,YAAY;EACZ,+BAA+B;EAC/B,gCAAgC;AAClC;;AAEA;EACE,0BAA0B;EAC1B,YAAY;EACZ,gBAAgB;AAClB;;AAEA;EACE,0BAA0B;EAC1B,WAAW;EACX,kBAAkB;AACpB;;AAEA;EACE,WAAW;EACX,8BAA8B;EAC9B,iCAAiC;AACnC;;AAEA;EACE,0BAA0B;EAC1B,WAAW;EACX,iBAAiB;AACnB;;AAEA;EACE,uBAAuB;EACvB,qBAAqB;AACvB",sourcesContent:[".gameboard {\n  display: inline-grid;\n  grid-template-columns: repeat(10, 42px);\n  grid-template-rows: repeat(10, 42px);\n  margin: 2em;\n  padding: 1em;\n  background-color: midnightblue;\n}\n\n.cell {\n  width: 40px;\n  height: 40px;\n  background-color: lightblue;\n  --ship-border: 2px solid slateblue;\n}\n\n.cell {\n  cursor: pointer;\n}\n\n.cell.disabled {\n  cursor: unset;\n  pointer-events: none;\n}\n\n.ship {\n  width: 36px;\n  height: 36px;\n  background-color: silver;\n}\n.ship.attacked,\n.for-machine.attacked {\n  background-color: red;\n}\n\n.empty-marked,\n.for-machine.empty-marked {\n  background-color: greenyellow;\n}\n\n.vertical.head {\n  border: var(--ship-border);\n  height: 40px;\n  border-bottom: none;\n}\n\n.vertical.middle {\n  height: 42px;\n  border-left: var(--ship-border);\n  border-right: var(--ship-border);\n}\n\n.vertical.tail {\n  border: var(--ship-border);\n  height: 38px;\n  border-top: none;\n}\n\n.horizontal.head {\n  border: var(--ship-border);\n  width: 40px;\n  border-right: none;\n}\n\n.horizontal.middle {\n  width: 42px;\n  border-top: var(--ship-border);\n  border-bottom: var(--ship-border);\n}\n\n.horizontal.tail {\n  border: var(--ship-border);\n  width: 38px;\n  border-left: none;\n}\n\n.ship.sunk {\n  background-color: black;\n  border-color: #944e4e;\n}\n"],sourceRoot:""}]);const s=i},190:(e,n,t)=>{t.d(n,{A:()=>s});var r=t(963),o=t.n(r),a=t(89),i=t.n(a)()(o());i.push([e.id,".instruction {\n  padding: 0.5em;\n  background-color: gainsboro;\n  font-size: 1.1em;\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n}\n\n.instruction > p {\n  text-align: center;\n}\n\n.ship-type-radio-button {\n  appearance: none;\n  width: max-content;\n  padding: 0.1em 0.2em;\n  border: 1px solid rebeccapurple;\n  border-radius: 5px;\n  font-size: inherit;\n}\n\n.ship-type-radio-button:checked {\n  background-color: rebeccapurple;\n  color: aliceblue;\n}\n\n#ship-type-carrier::after {\n  content: 'Carrier';\n}\n\n#ship-type-battleship::after {\n  content: 'Battleship';\n}\n\n#ship-type-destroyer::after {\n  content: 'Destroyer';\n}\n\n#ship-type-patrol-boat::after {\n  content: 'Patrol Boat';\n}\n\n.ship-configuration {\n  display: flex;\n}\n\n#ship-direction-type {\n  appearance: none;\n  width: max-content;\n  padding: 0.1em 0.2em;\n  border: 1px solid rebeccapurple;\n  border-radius: 5px;\n  font-size: inherit;\n}\n\n#ship-direction-type:checked {\n  background-color: rebeccapurple;\n  color: aliceblue;\n}\n\n#ship-direction-type::after {\n  content: 'Vertical';\n}\n\n.seperator {\n  font-size: 1.1em;\n  padding: 0.1em 0.2em;\n}\n","",{version:3,sources:["webpack://./src/views/instruction/style.css"],names:[],mappings:"AAAA;EACE,cAAc;EACd,2BAA2B;EAC3B,gBAAgB;EAChB,aAAa;EACb,mBAAmB;EACnB,6BAA6B;AAC/B;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,gBAAgB;EAChB,kBAAkB;EAClB,oBAAoB;EACpB,+BAA+B;EAC/B,kBAAkB;EAClB,kBAAkB;AACpB;;AAEA;EACE,+BAA+B;EAC/B,gBAAgB;AAClB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,qBAAqB;AACvB;;AAEA;EACE,oBAAoB;AACtB;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,gBAAgB;EAChB,kBAAkB;EAClB,oBAAoB;EACpB,+BAA+B;EAC/B,kBAAkB;EAClB,kBAAkB;AACpB;;AAEA;EACE,+BAA+B;EAC/B,gBAAgB;AAClB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,gBAAgB;EAChB,oBAAoB;AACtB",sourcesContent:[".instruction {\n  padding: 0.5em;\n  background-color: gainsboro;\n  font-size: 1.1em;\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n}\n\n.instruction > p {\n  text-align: center;\n}\n\n.ship-type-radio-button {\n  appearance: none;\n  width: max-content;\n  padding: 0.1em 0.2em;\n  border: 1px solid rebeccapurple;\n  border-radius: 5px;\n  font-size: inherit;\n}\n\n.ship-type-radio-button:checked {\n  background-color: rebeccapurple;\n  color: aliceblue;\n}\n\n#ship-type-carrier::after {\n  content: 'Carrier';\n}\n\n#ship-type-battleship::after {\n  content: 'Battleship';\n}\n\n#ship-type-destroyer::after {\n  content: 'Destroyer';\n}\n\n#ship-type-patrol-boat::after {\n  content: 'Patrol Boat';\n}\n\n.ship-configuration {\n  display: flex;\n}\n\n#ship-direction-type {\n  appearance: none;\n  width: max-content;\n  padding: 0.1em 0.2em;\n  border: 1px solid rebeccapurple;\n  border-radius: 5px;\n  font-size: inherit;\n}\n\n#ship-direction-type:checked {\n  background-color: rebeccapurple;\n  color: aliceblue;\n}\n\n#ship-direction-type::after {\n  content: 'Vertical';\n}\n\n.seperator {\n  font-size: 1.1em;\n  padding: 0.1em 0.2em;\n}\n"],sourceRoot:""}]);const s=i},391:(e,n,t)=>{t.d(n,{A:()=>s});var r=t(963),o=t.n(r),a=t(89),i=t.n(a)()(o());i.push([e.id,".player-view {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.player-view.gameOver {\n  pointer-events: none;\n}\n","",{version:3,sources:["webpack://./src/views/player/style.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;AACrB;;AAEA;EACE,oBAAoB;AACtB",sourcesContent:[".player-view {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.player-view.gameOver {\n  pointer-events: none;\n}\n"],sourceRoot:""}]);const s=i},971:(e,n,t)=>{t.d(n,{A:()=>s});var r=t(963),o=t.n(r),a=t(89),i=t.n(a)()(o());i.push([e.id,":root {\n  font-family:\n    system-ui,\n    -apple-system,\n    BlinkMacSystemFont,\n    'Segoe UI',\n    Roboto,\n    Oxygen,\n    Ubuntu,\n    Cantarell,\n    'Open Sans',\n    'Helvetica Neue',\n    sans-serif;\n  box-sizing: border-box;\n}\nbody,\np {\n  margin: 0;\n  padding: 0;\n}\n.game-view {\n  display: flex;\n  justify-content: space-between;\n  background-color: #7fcdff;\n}\n","",{version:3,sources:["webpack://./src/views/style.css"],names:[],mappings:"AAAA;EACE;;;;;;;;;;;cAWY;EACZ,sBAAsB;AACxB;AACA;;EAEE,SAAS;EACT,UAAU;AACZ;AACA;EACE,aAAa;EACb,8BAA8B;EAC9B,yBAAyB;AAC3B",sourcesContent:[":root {\n  font-family:\n    system-ui,\n    -apple-system,\n    BlinkMacSystemFont,\n    'Segoe UI',\n    Roboto,\n    Oxygen,\n    Ubuntu,\n    Cantarell,\n    'Open Sans',\n    'Helvetica Neue',\n    sans-serif;\n  box-sizing: border-box;\n}\nbody,\np {\n  margin: 0;\n  padding: 0;\n}\n.game-view {\n  display: flex;\n  justify-content: space-between;\n  background-color: #7fcdff;\n}\n"],sourceRoot:""}]);const s=i},72:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var a={},i=[],s=0;s<e.length;s++){var c=e[s],l=r.base?c[0]+r.base:c[0],d=a[l]||0,A="".concat(l," ").concat(d);a[l]=d+1;var u=t(A),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)n[u].references++,n[u].updater(p);else{var h=o(p,r);r.byIndex=s,n.splice(s,0,{identifier:A,updater:h,references:1})}i.push(A)}return i}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var s=t(a[i]);n[s].references--}for(var c=r(e,o),l=0;l<a.length;l++){var d=t(a[l]);0===n[d].references&&(n[d].updater(),n.splice(d,1))}a=c}}},659:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},540:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},56:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},113:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var a=n[r]={id:r,exports:{}};return e[r](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{var e=t(72),n=t.n(e),r=t(825),o=t.n(r),a=t(659),i=t.n(a),s=t(56),c=t.n(s),l=t(540),d=t.n(l),A=t(113),u=t.n(A),p=t(208),h={};h.styleTagTransform=u(),h.setAttributes=c(),h.insert=i().bind(null,"head"),h.domAPI=o(),h.insertStyleElement=d(),n()(p.A,h),p.A&&p.A.locals&&p.A.locals;var f=t(930),m={};m.styleTagTransform=u(),m.setAttributes=c(),m.insert=i().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=d(),n()(f.A,m),f.A&&f.A.locals&&f.A.locals;var v=t(190),g={};g.styleTagTransform=u(),g.setAttributes=c(),g.insert=i().bind(null,"head"),g.domAPI=o(),g.insertStyleElement=d(),n()(v.A,g),v.A&&v.A.locals&&v.A.locals;var b={CARRIER:5,BATTLESHIP:4,DESTROYER:3,PATROL_BOAT:2},E=function(e){var n,t=document.createElement("input");return t.setAttribute("type","radio"),t.classList.add("ship-type-radio-button"),t.name="ship-type",t.id="ship-type-"+e,t.ariaLabel="Ship Type "+e,t.value=b[(n=e,n.toUpperCase().replace("-","_"))],t},C=t(971),B={};B.styleTagTransform=u(),B.setAttributes=c(),B.insert=i().bind(null,"head"),B.domAPI=o(),B.insertStyleElement=d(),n()(C.A,B),C.A&&C.A.locals&&C.A.locals;const y=function(e,n){var t=document.createElement("div"),r=document.createElement("div");r.classList.add("game-view"),r.append(e,n);var o=function(){var e=document.createElement("div");e.classList.add("instruction");var n=document.createElement("p"),t=null;return window.addEventListener("gameStarted",(function(e){t=e.detail.player1.numOfShips,n.textContent="Player1 please place your "+t+" ship(s)"})),window.addEventListener("userShipPlaced",(function(){if(n.textContent="Player1 please place your "+--t+" ship(s)",0===t){e.remove();var r=new CustomEvent("allShipsPlaced");window.dispatchEvent(r)}})),e.append(n,function(){var e=document.createElement("form");e.classList.add("ship-configuration");var n=document.createElement("span");return n.textContent="—",n.classList.add("seperator"),e.append(function(){var e=document.createElement("input");return e.setAttribute("type","checkbox"),e.id="ship-direction-type",e.ariaLabel="ship direction type: vertical",e.checked=!0,e.addEventListener("click",(function(){var n=new CustomEvent("newShipDirectionTypeChanged",{detail:{isVertical:e.checked}});window.dispatchEvent(n)})),e}(),n,function(){var e=document.createElement("div");e.classList.add("ship-type-radio-button-group");var n=[E("carrier"),E("battleship"),E("destroyer"),E("patrol-boat")];return n[0].checked=!0,n.forEach((function(n){n.addEventListener("change",(function(){if(n.checked){var e=new CustomEvent("newShipTypeChanged",{detail:{shipSize:parseInt(n.value)}});window.dispatchEvent(e)}})),e.appendChild(n)})),e}()),e}()),e}();window.addEventListener("allShipsPlaced",(function(){o.remove()}));var a=function(){var e=document.createElement("div");e.classList.add("game-result");var n=document.createElement("p");n.textContent="Game result yet to be determined",window.addEventListener("userWon",(function(){n.textContent="User Has Won!"})),window.addEventListener("machineWon",(function(){n.textContent="Machine Has Won!"}));var t=document.createElement("button");return t.setAttribute("type","button"),t.textContent="New Game",t.addEventListener("click",(function(){var e=new CustomEvent("newGame");window.dispatchEvent(e)})),e.append(n,t),e}();return t.append(r,o,a),t};var w=t(304),S={};S.styleTagTransform=u(),S.setAttributes=c(),S.insert=i().bind(null,"head"),S.domAPI=o(),S.insertStyleElement=d(),n()(w.A,S),w.A&&w.A.locals&&w.A.locals;var k=t(391),x={};x.styleTagTransform=u(),x.setAttributes=c(),x.insert=i().bind(null,"head"),x.domAPI=o(),x.insertStyleElement=d(),n()(k.A,x),k.A&&k.A.locals&&k.A.locals;const L=function(e,n){var t=document.createElement("div");t.classList.add("player-view");var r=function(e,n,t){var r=document.createElement("div");r.classList.add("game-stats");var o=document.createElement("span");o.textContent=e.getName();var a=0,i=document.createElement("span");i.textContent=": "+n.getNumberOfShips()+" ship(s) left";var s=t?"machineShipSunk":"shipSunk";return window.addEventListener(s,(function(e){a=e.detail.numOfShips,i.textContent=": "+a+" ship(s) left"})),t||window.addEventListener("userShipPlaced",(function(){i.textContent=": "+ ++a+" ship(s) left"})),r.append(o),r.append(i),{getView:function(){return r},setNumberOfShipsLeft:function(e){i.textContent=": "+e+" ship(s) left"}}}(e,n.getModel(),e.isMachine),o=e.isMachine?"machineShipSunk":"userShipSunk";return t.addEventListener(o,(function(e){r.setNumberOfShipsLeft(e.detail.numOfShips)})),t.append(n.getView(),r.getView()),t};function O(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,o,a,i,s=[],c=!0,l=!1;try{if(a=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;c=!1}else for(;!(c=(r=a.call(t)).done)&&(s.push(r.value),s.length!==n);c=!0);}catch(e){l=!0,o=e}finally{try{if(!c&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(l)throw o}}return s}}(e,n)||function(e,n){if(e){if("string"==typeof e)return T(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?T(e,n):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function T(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}var j=function(){var e=Array.from(new Array(10),(function(){return Array.from(new Array(10),(function(){return null}))})),n=[],t=[],r=[],o=0,a=function(e){return[e[0]-1,function(e){var n=e.toUpperCase().charCodeAt(0);if(n>"J".toUpperCase().charCodeAt(0))throw new Error("Invalid column name");return n-"A".toUpperCase().charCodeAt(0)}(e[1])]};return{getSize:function(){return[10,10]},placeShipAt:function(n,r,i){var s=function(e){var n=e,t=n,r=function(){return 0===t};return{getLength:function(){return n},getHealth:function(){return t},takeHit:function(){if(r())throw new Error("Can't hit sunken ship");--t},hasSunk:r}}(i),c=O(a(n),2),l=c[0],d=c[1],A=l,u=d;if(!function(n,t,r,o){for(var a=0;a<r.getLength();++a){if(null!==e[n][t])return!1;o?++n:++t}return!0}(A,u,s,r))throw new Error("Ships can't overlap");t.push([A,u]),++o;for(var p=0;p<s.getLength();++p){var h={isVertical:r,type:1===s.getLength()?0:A===l&&u===d?1:p===s.getLength()-1?3:2};e[A][u]=[s,h],r?++A:++u}},receiveAttack:function(t){if(r.some((function(e){return e[0]===t[0]&&e[1]===t[1]})))return 2;r.push(t);var i=O(a(t),2),s=i[0],c=i[1];if(null===e[s][c])return n.push(t),0;var l=e[s][c][0];return l.takeHit(),l.hasSunk()&&--o,1},allShipsHaveSunk:function(){for(var n=0;n<t.length;++n){var r=O(t[n],2),o=r[0],a=r[1];if(!e[o][a][0].hasSunk())return!1}return!0},getMissedAttackCoordinatesList:function(){return n},getNumberOfShips:function(){return o},coordinatesToIndices:a,indexRowColToCoordinates:function(e){return[e[0]+1,function(e){if(e>9)throw new Error("Index out of bounds");var n="A".charCodeAt(0);return String.fromCharCode(n+e)}(e[1])]},getCellsOccupiedByShip:function(n){for(var t=[],r=0;r<10;++r)for(var o=0;o<10;++o)null!==e[r][o]&&e[r][o][0]===n&&t.push([r,o]);return t},getShipAt:function(n){var t=O(n,2),r=t[0],o=t[1];return e[r][o][0]},getShipInfoAt:function(n){var t=O(n,2),r=t[0],o=t[1];return e[r][o][1]}}},I=t(8),z={};function M(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,o,a,i,s=[],c=!0,l=!1;try{if(a=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;c=!1}else for(;!(c=(r=a.call(t)).done)&&(s.push(r.value),s.length!==n);c=!0);}catch(e){l=!0,o=e}finally{try{if(!c&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(l)throw o}}return s}}(e,n)||function(e,n){if(e){if("string"==typeof e)return P(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?P(e,n):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function P(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}z.styleTagTransform=u(),z.setAttributes=c(),z.insert=i().bind(null,"head"),z.domAPI=o(),z.insertStyleElement=d(),n()(I.A,z),I.A&&I.A.locals&&I.A.locals;var R=function(e,n){switch(0!==n.type&&e.classList.add(n.isVertical?"vertical":"horizontal"),n.type){case 1:e.classList.add("head");break;case 3:e.classList.add("tail");break;case 2:e.classList.add("middle");break;default:e.classList.add("stand-alone")}},V=function(e,n){var t=new CustomEvent(arguments.length>2&&void 0!==arguments[2]&&arguments[2]?"machineShipSunk":"userShipSunk",{detail:{numOfShips:e.getNumberOfShips()}});n.dispatchEvent(t)},W=function(e,n){switch(n){case 0:e.classList.add("empty-marked");break;case 1:e.classList.add("attacked");break;case 2:alert("Can't attack the same location twice");break;default:throw new Error("Something went wrong! Bad AttackResult")}},U=function(e,n,t){e.getCellsOccupiedByShip(t).forEach((function(t){var r=M(t,2),o=r[0],a=r[1],i=e.getShipInfoAt(t),s=n.querySelector('div[data-row="'.concat(o,'"][data-col="').concat(a,'"]'));R(s,i),s.classList.add("ship"),s.classList.add("sunk")}))},N=function(e,n,t,r){var o=document.createElement("div");if(o.classList.add("cell"),o.setAttribute("data-row",r[0]),o.setAttribute("data-col",r[1]),t)o.classList.add("for-machine"),o.classList.add("disabled"),window.addEventListener("allShipsPlaced",(function(){o.classList.remove("disabled")})),function(e,n,t,r){e.addEventListener("click",(function(){var o=M(n.indexRowColToCoordinates(r),2),a=o[0],i=o[1],s=n.receiveAttack([a,i]);if(W(e,s),2!==s){var c=new CustomEvent("userPlayed");if(t.dispatchEvent(c),0!==s){var l=n.getShipAt(r);if(l.hasSunk()&&(V(n,window,!0),U(n,t,l),0===n.getNumberOfShips())){var d=new CustomEvent("gameOver");window.dispatchEvent(d);var A=new CustomEvent("userWon");window.dispatchEvent(A)}}}}))}(o,n,e,r);else{var a=5,i=!0;window.addEventListener("newShipDirectionTypeChanged",(function(e){i=e.detail.isVertical})),window.addEventListener("newShipTypeChanged",(function(e){a=e.detail.shipSize})),window.addEventListener("allShipsPlaced",(function(){o.classList.add("disabled")})),o.addEventListener("click",(function(){var t=M(n.indexRowColToCoordinates(r),2),o=t[0],s=t[1];n.placeShipAt([o,s],i,a),function(e,n,t){var r=n.getShipAt(e);n.getCellsOccupiedByShip(r).forEach((function(e){var r=M(e,2),o=r[0],a=r[1],i=n.getShipInfoAt(e),s=t.querySelector('div[data-row="'.concat(o,'"][data-col="').concat(a,'"]'));R(s,i),s.classList.add("ship")}))}(r,n,e);var c=new CustomEvent("userShipPlaced");window.dispatchEvent(c)}))}return o};var Y=function(e,n){var t=function(e){var n,t=e?((n=j()).placeShipAt([1,"A"],!1,2),n.placeShipAt([1,"D"],!0,3),n.placeShipAt([1,"G"],!1,4),n.placeShipAt([3,"A"],!0,4),n.placeShipAt([3,"F"],!1,3),n.placeShipAt([3,"J"],!0,2),n.placeShipAt([6,"F"],!0,2),n.placeShipAt([6,"J"],!0,3),n.placeShipAt([8,"A"],!1,2),n.placeShipAt([10,"F"],!1,5),n):j(),r=function(e,n){var t=document.createElement("div");t.classList.add("gameboard");for(var r=M(e.getSize(),2),o=r[0],a=r[1],i=0;i<o;++i)for(var s=0;s<a;++s){var c=N(t,e,n,[i,s]);t.appendChild(c)}return t}(t,e);return{getModel:function(){return t},getView:function(){return r}}}(n),r=function(e){return{getName:function(){return e},isMachine:arguments.length>1&&void 0!==arguments[1]&&arguments[1]}}(e,n),o=L(r,t);return{getModel:function(){return r},getView:function(){return o},getGameboardController:function(){return t}}};function q(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}const H=function(){var e=Y("Player1"),n=e.getGameboardController().getModel(),t=e.getGameboardController().getView(),r=function(){for(var e=[],n=0;n<10;++n)for(var t=0;t<10;++t)e.push([n,t]);return function(e){for(var n=e.length-1;n>0;n--){var t=Math.floor(Math.random()*(n+1)),r=[e[t],e[n]];e[n]=r[0],e[t]=r[1]}}(e),e}(),o=Y("Machine",!0),a=y(e.getView(),o.getView());o.getGameboardController().getView().addEventListener("userPlayed",(function(){if(0!==r.length){var o=(u=r.pop(),p=2,function(e){if(Array.isArray(e))return e}(u)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,o,a,i,s=[],c=!0,l=!1;try{if(a=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;c=!1}else for(;!(c=(r=a.call(t)).done)&&(s.push(r.value),s.length!==n);c=!0);}catch(e){l=!0,o=e}finally{try{if(!c&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(l)throw o}}return s}}(u,p)||function(e,n){if(e){if("string"==typeof e)return q(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?q(e,n):void 0}}(u,p)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),a=o[0],i=o[1],s=n.receiveAttack(n.indexRowColToCoordinates([a,i])),c=t.querySelector('div[data-row="'.concat(a,'"][data-col="').concat(i,'"]'));if(W(c,s),1===s){var l=n.getShipAt([a,i]);if(l.hasSunk()&&(V(n,e.getView()),U(n,t,l),0===n.getNumberOfShips())){var d=new CustomEvent("gameOver");window.dispatchEvent(d);var A=new CustomEvent("machineWon");window.dispatchEvent(A)}}}else alert("Game Over");var u,p})),window.addEventListener("gameOver",(function(){e.getView().classList.add("gameOver"),o.getView().classList.add("gameOver")}));var i=new CustomEvent("gameStarted",{detail:{player1:{numOfShips:10}}});return window.dispatchEvent(i),{getView:function(){return a}}};var G=H(),Z=document.querySelector("body>main");Z.appendChild(G.getView()),window.addEventListener("newGame",(function(){var e=H();Z.replaceChild(e.getView(),G.getView()),G=e}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,